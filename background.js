chrome.runtime.onInstalled.addListener(() => {
    console.log("üöÄ Extens√£o Diretoria Jur√≠dicaPRO instalada!");
});

chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {
    if (request.action === "injetarScript") {
        console.log("üì• Solicitando inje√ß√£o de `content.js`...");

        if (sender.tab) {
            chrome.scripting.executeScript(
                {
                    target: { tabId: sender.tab.id },
                    files: ["content.js"]
                },
                () => {
                    console.log("‚úÖ `content.js` injetado com sucesso!");
                    sendResponse({ status: "sucesso" });
                }
            );
        } else {
            console.warn("‚ö†Ô∏è Nenhuma aba ativa encontrada para injetar o script.");
            sendResponse({ status: "erro", mensagem: "Nenhuma aba ativa encontrada." });
        }

        return true; // Mant√©m a conex√£o aberta at√© a resposta
    }

    // Inje√ß√£o de script dentro de iframes espec√≠ficos
    if (request.action === "injetarScriptIframe") {
        console.log("üì• Solicitando inje√ß√£o de `inject.js` no iframe...");

        if (sender.tab && request.iframeId) {
            chrome.scripting.executeScript(
                {
                    target: { tabId: sender.tab.id, frameIds: [request.iframeId] },
                    files: ["inject.js"]
                },
                () => {
                    console.log("‚úÖ `inject.js` injetado com sucesso no iframe.");
                    sendResponse({ status: "sucesso" });
                }
            );
        } else {
            console.warn("‚ö†Ô∏è Erro ao injetar `inject.js`: iframeId ou aba n√£o encontrada.");
            sendResponse({ status: "erro", mensagem: "IframeId ou aba n√£o encontrada." });
        }

        return true; // Mant√©m a conex√£o aberta at√© a resposta
    }
});
